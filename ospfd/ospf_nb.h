#ifndef _FRR_OSPF_NB_H_
#define _FRR_OSPF_NB_H_

extern const struct frr_yang_module_info frr_ospfd_info;

/*
 * Callback registered with routing_nb lib to validate the
 * instance of ospf
 */
int routing_control_plane_protocols_name_validate(struct nb_cb_create_args *args);
int routing_control_plane_protocols_ospf_create(struct nb_cb_create_args *args);
int routing_control_plane_protocols_ospf_destroy(struct nb_cb_destroy_args *args);

/* prototypes */
int lib_interface_ospf_create(struct nb_cb_create_args *args);
int lib_interface_ospf_destroy(struct nb_cb_destroy_args *args);
int lib_interface_ospf_ospf_id_modify(struct nb_cb_modify_args *args);
int lib_interface_ospf_area_modify(struct nb_cb_modify_args *args);
int lib_interface_ospf_area_destroy(struct nb_cb_destroy_args *args);
int lib_interface_ospf_cost_modify(struct nb_cb_modify_args *args);
int lib_interface_ospf_cost_destroy(struct nb_cb_destroy_args *args);
int lib_interface_ospf_passive_modify(struct nb_cb_modify_args *args);
int lib_interface_ospf_priority_modify(struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_type_modify(struct nb_cb_modify_args *args);
int lib_interface_ospf_dmvpn_modify(struct nb_cb_modify_args *args);
int lib_interface_ospf_dmvpn_destroy(struct nb_cb_destroy_args *args);
int lib_interface_ospf_mtu_ignore_modify(struct nb_cb_modify_args *args);
int lib_interface_ospf_dead_interval_interval_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_dead_interval_minimal_hello_multiplier_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_dead_interval_minimal_hello_multiplier_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_hello_interval_modify(struct nb_cb_modify_args *args);
int lib_interface_ospf_retransmit_interval_modify(struct nb_cb_modify_args *args);
int lib_interface_ospf_transmit_delay_modify(struct nb_cb_modify_args *args);
int lib_interface_ospf_authentication_type_modify(struct nb_cb_modify_args *args);
int lib_interface_ospf_authentication_simple_key_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_authentication_simple_key_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_authentication_mds_keys_mds_key_create(
	struct nb_cb_create_args *args);
int lib_interface_ospf_authentication_mds_keys_mds_key_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_mpls_ldp_sync_enable_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_mpls_ldp_sync_holddown_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_mpls_ldp_sync_holddown_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_bfd_enable_modify(struct nb_cb_modify_args *args);
int lib_interface_ospf_bfd_local_multiplier_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_bfd_profile_modify(struct nb_cb_modify_args *args);
int lib_interface_ospf_bfd_profile_destroy(struct nb_cb_destroy_args *args);
int lib_interface_ospf_bfd_tx_rx_intervals_desired_min_tx_interval_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_bfd_tx_rx_intervals_required_min_rx_interval_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_address_create(struct nb_cb_create_args *args);
int lib_interface_ospf_interface_address_destroy(struct nb_cb_destroy_args *args);
int lib_interface_ospf_interface_address_area_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_address_area_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_interface_address_cost_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_address_cost_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_interface_address_passive_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_address_passive_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_interface_address_priority_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_address_priority_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_interface_address_interface_type_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_address_interface_type_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_interface_address_dmvpn_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_address_dmvpn_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_interface_address_mtu_ignore_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_address_mtu_ignore_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_interface_address_dead_interval_interval_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_address_dead_interval_interval_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_interface_address_dead_interval_minimal_hello_multiplier_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_address_dead_interval_minimal_hello_multiplier_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_interface_address_hello_interval_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_address_hello_interval_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_interface_address_retransmit_interval_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_address_retransmit_interval_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_interface_address_transmit_delay_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_address_transmit_delay_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_interface_address_authentication_type_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_address_authentication_type_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_interface_address_authentication_simple_key_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_address_authentication_simple_key_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_interface_address_authentication_mds_keys_mds_key_create(
	struct nb_cb_create_args *args);
int lib_interface_ospf_interface_address_authentication_mds_keys_mds_key_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_interface_address_mpls_ldp_sync_enable_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_address_mpls_ldp_sync_enable_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_interface_address_mpls_ldp_sync_holddown_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_address_mpls_ldp_sync_holddown_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_interface_address_bfd_enable_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_address_bfd_enable_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_interface_address_bfd_local_multiplier_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_address_bfd_local_multiplier_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_interface_address_bfd_profile_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_address_bfd_profile_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_interface_address_bfd_tx_rx_intervals_desired_min_tx_interval_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_address_bfd_tx_rx_intervals_desired_min_tx_interval_destroy(
	struct nb_cb_destroy_args *args);
int lib_interface_ospf_interface_address_bfd_tx_rx_intervals_required_min_rx_interval_modify(
	struct nb_cb_modify_args *args);
int lib_interface_ospf_interface_address_bfd_tx_rx_intervals_required_min_rx_interval_destroy(
	struct nb_cb_destroy_args *args);
struct yang_data *
lib_interface_ospf_state_state_get_elem(struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_hello_timer_get_elem(struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_wait_timer_get_elem(struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_dr_router_id_get_elem(struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_dr_ip_addr_get_elem(struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_bdr_router_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_bdr_ip_addr_get_elem(struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_network_lsa_seqno_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_multicast_groups_ospf_all_routers_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_multicast_groups_ospf_designated_routers_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_threads_ls_ack_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_threads_ls_ack_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_threads_ls_ack_direct_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_threads_ls_upd_event_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_threads_opaque_lsa_self_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_threads_opaque_lsa_self_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_statistics_if_event_count_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_statistics_hello_in_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_statistics_hello_out_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_statistics_db_desc_in_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_statistics_db_desc_out_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_statistics_ls_req_in_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_statistics_ls_req_out_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_statistics_ls_upd_in_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_statistics_ls_upd_out_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_statistics_ls_ack_in_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_statistics_ls_ack_out_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_statistics_discarded_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_statistics_nbrs_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_statistics_full_nbrs_get_elem(
	struct nb_cb_get_elem_args *args);
const void *lib_interface_ospf_state_neighbors_neighbor_get_next(
	struct nb_cb_get_next_args *args);
int lib_interface_ospf_state_neighbors_neighbor_get_keys(
	struct nb_cb_get_keys_args *args);
const void *lib_interface_ospf_state_neighbors_neighbor_lookup_entry(
	struct nb_cb_lookup_entry_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_neighbor_router_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_neighbors_neighbor_address_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_dr_router_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_neighbors_neighbor_dr_ip_addr_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_bdr_router_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_bdr_ip_addr_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_neighbors_neighbor_state_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *lib_interface_ospf_state_neighbors_neighbor_dead_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_statistics_nbr_retrans_qlen_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_statistics_nbr_request_qlen_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_statistics_nbr_summary_len_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_statistics_nbr_uptime_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_statistics_nbr_downtime_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_statistics_nsm_state_changes_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_statistics_nsm_last_progressive_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_statistics_nsm_last_regressive_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_threads_db_desc_retransmission_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_threads_db_desc_retransmission_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_threads_ls_request_retransmission_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_threads_ls_request_retransmission_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_threads_ls_update_retransmission_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_threads_ls_update_retransmission_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_threads_hello_reply_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_threads_hello_reply_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_graceful_restart_helper_grace_period_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_graceful_restart_helper_restart_reason_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_graceful_restart_helper_helper_status_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_graceful_restart_helper_helper_exit_reason_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_neighbors_neighbor_graceful_restart_helper_helper_rejected_reason_get_elem(
	struct nb_cb_get_elem_args *args);
const void *lib_interface_ospf_state_database_link_scope_lsa_type_get_next(
	struct nb_cb_get_next_args *args);
int lib_interface_ospf_state_database_link_scope_lsa_type_get_keys(
	struct nb_cb_get_keys_args *args);
const void *lib_interface_ospf_state_database_link_scope_lsa_type_lookup_entry(
	struct nb_cb_lookup_entry_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_lsa_type_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_get_next(
	struct nb_cb_get_next_args *args);
int lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_get_keys(
	struct nb_cb_get_keys_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_lookup_entry(
	struct nb_cb_lookup_entry_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_lsa_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_adv_router_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_decode_completed_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_raw_data_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_header_lsa_options_lsa_option_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_header_lsa_options_lsa_option_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_header_lsa_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_header_opaque_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_header_opaque_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_header_age_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_header_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_header_adv_router_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_header_seq_num_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_header_checksum_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_header_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_router_router_bits_rtr_lsa_bits_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_router_router_bits_rtr_lsa_bits_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_router_num_of_links_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_router_links_link_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_router_links_link_link_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_router_links_link_link_data_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_router_links_link_type_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_router_links_link_topologies_topology_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_router_links_link_topologies_topology_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_router_links_link_topologies_topology_metric_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_network_network_mask_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_network_attached_routers_attached_router_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_network_attached_routers_attached_router_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_summary_network_mask_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_summary_topologies_topology_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_summary_topologies_topology_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_summary_topologies_topology_metric_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_external_network_mask_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_external_topologies_topology_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_external_topologies_topology_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_external_topologies_topology_flags_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_external_topologies_topology_metric_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_external_topologies_topology_forwarding_address_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_external_topologies_topology_external_route_tag_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_router_capabilities_tlv_router_informational_capabilities_informational_capabilities_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_router_capabilities_tlv_router_informational_capabilities_informational_capabilities_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_pce_address_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_path_scope_scope_flags_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_path_scope_pref_l_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_path_scope_pref_r_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_path_scope_pref_s_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_path_scope_pref_y_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_domain_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_domain_id_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_neighbors_neighbor_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_neighbors_neighbor_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_neighbors_neighbor_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_capabilities_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_sr_algorithm_tlv_sr_algorithm_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_sr_algorithm_tlv_sr_algorithm_get_next(
	struct nb_cb_get_next_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_sid_range_tlvs_sid_range_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_sid_range_tlvs_sid_range_tlv_range_size_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_sid_range_tlvs_sid_range_tlv_sid_sub_tlv_sid_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_local_block_tlvs_local_block_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_local_block_tlvs_local_block_tlv_range_size_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_local_block_tlvs_local_block_tlv_sid_sub_tlv_sid_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_node_msd_tlvs_node_msd_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_node_msd_tlvs_node_msd_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_node_msd_tlvs_node_msd_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_unknown_tlvs_unknown_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_unknown_tlvs_unknown_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_unknown_tlvs_unknown_tlv_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_unknown_tlvs_unknown_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_router_address_tlv_router_address_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_link_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_link_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_local_if_ipv4_addrs_local_if_ipv4_addr_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_local_if_ipv4_addrs_local_if_ipv4_addr_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_remote_if_ipv4_addrs_remote_if_ipv4_addr_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_remote_if_ipv4_addrs_remote_if_ipv4_addr_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_te_metric_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_max_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_max_reservable_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unreserved_bandwidths_unreserved_bandwidth_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unreserved_bandwidths_unreserved_bandwidth_priority_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unreserved_bandwidths_unreserved_bandwidth_unreserved_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_admin_group_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_local_and_remote_te_router_id_local_router_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_local_and_remote_te_router_id_remote_router_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_link_local_remote_id_link_local_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_link_local_remote_id_link_remote_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_remote_as_number_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_ipv4_remote_asbr_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_link_delay_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_min_max_unidirectional_link_delay_min_delay_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_min_max_unidirectional_link_delay_max_delay_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_delay_variation_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_link_loss_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_residual_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_available_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_utilized_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unknown_tlvs_unknown_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unknown_tlvs_unknown_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unknown_tlvs_unknown_tlv_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unknown_tlvs_unknown_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_grace_lsa_opaque_grace_period_tlv_grace_period_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_grace_lsa_opaque_restart_reason_tlv_restart_reason_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_grace_lsa_opaque_if_address_tlv_if_address_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_route_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_flags_extended_prefix_flags_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_flags_extended_prefix_flags_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_prefix_sid_flags_bits_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_prefix_sid_flags_bits_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_algorithm_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_sid_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_unknown_tlvs_unknown_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_unknown_tlvs_unknown_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_unknown_tlvs_unknown_tlv_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_unknown_tlvs_unknown_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_prefix_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_af_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_range_size_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_extended_prefix_range_flags_bits_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_extended_prefix_range_flags_bits_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_prefix_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_unknown_tlvs_unknown_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_unknown_tlvs_unknown_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_unknown_tlvs_unknown_tlv_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_unknown_tlvs_unknown_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_link_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_link_data_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_maximum_sid_depth_tlv_msd_type_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_maximum_sid_depth_tlv_msd_type_msd_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_maximum_sid_depth_tlv_msd_type_msd_value_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_adj_sid_flags_bits_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_adj_sid_flags_bits_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_weight_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_sid_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_lan_adj_sid_flags_bits_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_lan_adj_sid_flags_bits_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_weight_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_neighbor_router_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_sid_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_remote_if_address_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_unknown_tlvs_unknown_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_unknown_tlvs_unknown_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_unknown_tlvs_unknown_tlv_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
lib_interface_ospf_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_unknown_tlvs_unknown_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_use_arp_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_explicit_router_id_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_explicit_router_id_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_capability_opaque_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_compatible_rfc1583_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_log_adjacency_changes_create(
	struct nb_cb_create_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_log_adjacency_changes_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_log_adjacency_changes_detail_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_send_extra_data_zebra_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_default_metric_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_default_metric_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_write_multiplier_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_passive_interface_default_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_abr_type_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_create(
	struct nb_cb_create_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_as_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_as_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_area_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_area_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_pce_address_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_pce_address_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_pce_scope_scope_flags_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_pce_scope_scope_flags_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_pce_scope_pref_l_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_pce_scope_pref_l_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_pce_scope_pref_r_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_pce_scope_pref_r_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_pce_scope_pref_s_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_pce_scope_pref_s_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_pce_scope_pref_y_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_pce_scope_pref_y_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_pce_as_domain_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_pce_as_domain_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_pce_as_neighbor_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_pce_as_neighbor_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_pce_capabilities_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_router_info_pce_capabilities_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_graceful_restart_enable_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_graceful_restart_helper_enable_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_graceful_restart_restart_interval_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_graceful_restart_helper_strict_lsa_checking_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_graceful_restart_helper_only_planned_restart_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_graceful_restart_supported_grace_time_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_auto_cost_reference_bandwidth_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_default_information_originate_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_default_information_metric_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_default_information_metric_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_default_information_metric_type_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_default_information_metric_type_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_default_information_route_map_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_default_information_route_map_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_redistribute_routes_create(
	struct nb_cb_create_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_redistribute_routes_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_redistribute_routes_metric_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_redistribute_routes_metric_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_redistribute_routes_metric_type_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_redistribute_routes_metric_type_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_redistribute_routes_route_map_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_redistribute_routes_route_map_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_route_aggregation_summary_routes_summary_create(
	struct nb_cb_create_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_route_aggregation_summary_routes_summary_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_route_aggregation_summary_routes_summary_tag_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_route_aggregation_summary_routes_summary_tag_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_route_aggregation_summary_routes_summary_no_advertise_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_route_aggregation_timer_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_preference_all_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_preference_all_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_preference_external_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_preference_external_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_preference_inter_area_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_preference_inter_area_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_preference_intra_area_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_preference_intra_area_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_distribute_from_zebra_distribute_create(
	struct nb_cb_create_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_distribute_from_zebra_distribute_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_max_metric_router_lsa_always_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_max_metric_router_lsa_on_shutdown_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_max_metric_router_lsa_on_shutdown_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_max_metric_router_lsa_on_startup_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_max_metric_router_lsa_on_startup_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_mpls_te_on_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_mpls_te_rid_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_mpls_te_rid_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_mpls_te_inter_as_as_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_mpls_te_inter_as_as_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_mpls_te_inter_as_area_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_mpls_te_inter_as_area_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_mpls_ldp_igp_sync_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_mpls_ldp_holddown_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_fast_reroute_ti_lfa_protection_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_spf_control_paths_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_spf_control_ietf_spf_delay_delay_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_spf_control_ietf_spf_delay_initial_holdtime_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_spf_control_ietf_spf_delay_max_holdtime_modify(
	struct nb_cb_modify_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_spf_control_ietf_spf_delay_hold_multiplier_get_elem(
	struct nb_cb_get_elem_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_timers_refresh_interval_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_timers_lsa_min_arrival_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_timers_lsa_min_interval_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_sr_mpls_srgb_lower_bound_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_sr_mpls_srgb_upper_bound_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_sr_mpls_srlb_lower_bound_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_sr_mpls_srlb_upper_bound_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_sr_mpls_node_msd_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_sr_mpls_node_msd_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_sr_mpls_on_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_sr_mpls_bindings_connected_prefix_sid_map_connected_prefix_sid_create(
	struct nb_cb_create_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_sr_mpls_bindings_connected_prefix_sid_map_connected_prefix_sid_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_sr_mpls_bindings_connected_prefix_sid_map_connected_prefix_sid_value_type_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_sr_mpls_bindings_connected_prefix_sid_map_connected_prefix_sid_sid_value_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_sr_mpls_bindings_connected_prefix_sid_map_connected_prefix_sid_last_hop_behavior_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_nbma_neighbors_neighbor_create(
	struct nb_cb_create_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_nbma_neighbors_neighbor_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_nbma_neighbors_neighbor_priority_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_nbma_neighbors_neighbor_poll_interval_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_networks_network_create(
	struct nb_cb_create_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_networks_network_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_networks_network_area_modify(
	struct nb_cb_modify_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_router_flags_router_flag_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_router_flags_router_flag_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_abr_task_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_abr_task_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_asbr_check_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_asbr_check_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_asbr_nssa_redist_update_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_asbr_nssa_redist_update_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_distribute_update_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_distribute_update_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_spf_calc_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_spf_calc_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_ase_calc_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_ase_calc_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_opaque_lsa_self_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_opaque_lsa_self_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_sr_update_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_sr_update_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_max_age_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_max_age_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_max_age_walker_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_max_age_walker_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_deferred_shutdown_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_deferred_shutdown_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_default_routemap_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_lsa_refresher_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_lsa_refresher_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_lsa_refresher_started_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_external_aggr_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_threads_external_aggr_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_graceful_restart_active_restarter_count_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_graceful_restart_last_exit_reason_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_network_get_next(
	struct nb_cb_get_next_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_network_get_keys(
	struct nb_cb_get_keys_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_network_lookup_entry(
	struct nb_cb_lookup_entry_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_network_prefix_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_network_next_hops_next_hop_get_next(
	struct nb_cb_get_next_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_network_next_hops_next_hop_get_keys(
	struct nb_cb_get_keys_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_network_next_hops_next_hop_lookup_entry(
	struct nb_cb_lookup_entry_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_network_next_hops_next_hop_next_hop_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_network_next_hops_next_hop_outgoing_interface_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_network_metric_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_network_route_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_network_destination_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_network_changed_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_network_area_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_network_area_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_network_options_lsa_options_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_network_options_lsa_options_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_network_flags_router_flags_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_network_flags_router_flags_get_next(
	struct nb_cb_get_next_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_router_get_next(
	struct nb_cb_get_next_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_router_get_keys(
	struct nb_cb_get_keys_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_router_lookup_entry(
	struct nb_cb_lookup_entry_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_router_prefix_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_router_next_hops_next_hop_get_next(
	struct nb_cb_get_next_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_router_next_hops_next_hop_get_keys(
	struct nb_cb_get_keys_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_router_next_hops_next_hop_lookup_entry(
	struct nb_cb_lookup_entry_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_router_next_hops_next_hop_next_hop_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_router_next_hops_next_hop_outgoing_interface_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_router_metric_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_router_route_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_router_destination_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_router_changed_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_router_area_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_router_area_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_router_options_lsa_options_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_router_options_lsa_options_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_router_flags_router_flags_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_router_flags_router_flags_get_next(
	struct nb_cb_get_next_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_border_get_next(
	struct nb_cb_get_next_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_border_get_keys(
	struct nb_cb_get_keys_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_border_lookup_entry(
	struct nb_cb_lookup_entry_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_border_prefix_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_border_next_hops_next_hop_get_next(
	struct nb_cb_get_next_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_border_next_hops_next_hop_get_keys(
	struct nb_cb_get_keys_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_border_next_hops_next_hop_lookup_entry(
	struct nb_cb_lookup_entry_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_border_next_hops_next_hop_next_hop_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_border_next_hops_next_hop_outgoing_interface_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_border_metric_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_border_route_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_border_destination_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_border_changed_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_border_area_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_border_area_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_border_options_lsa_options_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_border_options_lsa_options_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_border_flags_router_flags_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_border_flags_router_flags_get_next(
	struct nb_cb_get_next_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_get_next(
	struct nb_cb_get_next_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_get_keys(
	struct nb_cb_get_keys_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_lookup_entry(
	struct nb_cb_lookup_entry_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_prefix_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_next_hops_next_hop_get_next(
	struct nb_cb_get_next_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_next_hops_next_hop_get_keys(
	struct nb_cb_get_keys_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_next_hops_next_hop_lookup_entry(
	struct nb_cb_lookup_entry_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_next_hops_next_hop_next_hop_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_next_hops_next_hop_outgoing_interface_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_metric_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_route_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_destination_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_changed_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_ls_cost_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_route_tag_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_asbr_prefix_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_asbr_next_hops_next_hop_get_next(
	struct nb_cb_get_next_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_asbr_next_hops_next_hop_get_keys(
	struct nb_cb_get_keys_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_asbr_next_hops_next_hop_lookup_entry(
	struct nb_cb_lookup_entry_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_asbr_next_hops_next_hop_next_hop_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_asbr_next_hops_next_hop_outgoing_interface_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_asbr_metric_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_asbr_route_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_asbr_destination_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_asbr_changed_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_asbr_area_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_asbr_area_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_asbr_options_lsa_options_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_asbr_options_lsa_options_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_asbr_flags_router_flags_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_local_rib_external_asbr_flags_router_flags_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_statistics_originate_new_lsa_count_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_statistics_rx_new_lsas_count_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_statistics_spf_timestamp_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_statistics_spf_duration_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_get_next(
	struct nb_cb_get_next_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_get_keys(
	struct nb_cb_get_keys_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_lookup_entry(
	struct nb_cb_lookup_entry_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_lsa_type_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_get_next(
	struct nb_cb_get_next_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_get_keys(
	struct nb_cb_get_keys_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_lookup_entry(
	struct nb_cb_lookup_entry_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_lsa_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_adv_router_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_decode_completed_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_raw_data_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_header_lsa_options_lsa_option_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_header_lsa_options_lsa_option_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_header_lsa_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_header_opaque_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_header_opaque_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_header_age_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_header_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_header_adv_router_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_header_seq_num_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_header_checksum_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_header_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_router_router_bits_rtr_lsa_bits_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_router_router_bits_rtr_lsa_bits_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_router_num_of_links_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_router_links_link_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_router_links_link_link_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_router_links_link_link_data_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_router_links_link_type_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_router_links_link_topologies_topology_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_router_links_link_topologies_topology_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_router_links_link_topologies_topology_metric_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_network_network_mask_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_network_attached_routers_attached_router_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_network_attached_routers_attached_router_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_summary_network_mask_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_summary_topologies_topology_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_summary_topologies_topology_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_summary_topologies_topology_metric_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_external_network_mask_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_external_topologies_topology_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_external_topologies_topology_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_external_topologies_topology_flags_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_external_topologies_topology_metric_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_external_topologies_topology_forwarding_address_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_external_topologies_topology_external_route_tag_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_router_capabilities_tlv_router_informational_capabilities_informational_capabilities_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_router_capabilities_tlv_router_informational_capabilities_informational_capabilities_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_pce_address_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_path_scope_scope_flags_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_path_scope_pref_l_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_path_scope_pref_r_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_path_scope_pref_s_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_path_scope_pref_y_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_domain_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_domain_id_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_neighbors_neighbor_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_neighbors_neighbor_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_neighbors_neighbor_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_capabilities_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_sr_algorithm_tlv_sr_algorithm_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_sr_algorithm_tlv_sr_algorithm_get_next(
	struct nb_cb_get_next_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_sid_range_tlvs_sid_range_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_sid_range_tlvs_sid_range_tlv_range_size_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_sid_range_tlvs_sid_range_tlv_sid_sub_tlv_sid_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_local_block_tlvs_local_block_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_local_block_tlvs_local_block_tlv_range_size_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_local_block_tlvs_local_block_tlv_sid_sub_tlv_sid_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_node_msd_tlvs_node_msd_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_node_msd_tlvs_node_msd_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_node_msd_tlvs_node_msd_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_unknown_tlvs_unknown_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_unknown_tlvs_unknown_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_unknown_tlvs_unknown_tlv_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_ri_opaque_unknown_tlvs_unknown_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_router_address_tlv_router_address_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_link_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_link_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_local_if_ipv4_addrs_local_if_ipv4_addr_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_local_if_ipv4_addrs_local_if_ipv4_addr_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_remote_if_ipv4_addrs_remote_if_ipv4_addr_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_remote_if_ipv4_addrs_remote_if_ipv4_addr_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_te_metric_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_max_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_max_reservable_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unreserved_bandwidths_unreserved_bandwidth_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unreserved_bandwidths_unreserved_bandwidth_priority_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unreserved_bandwidths_unreserved_bandwidth_unreserved_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_admin_group_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_local_and_remote_te_router_id_local_router_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_local_and_remote_te_router_id_remote_router_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_link_local_remote_id_link_local_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_link_local_remote_id_link_remote_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_remote_as_number_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_ipv4_remote_asbr_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_link_delay_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_min_max_unidirectional_link_delay_min_delay_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_min_max_unidirectional_link_delay_max_delay_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_delay_variation_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_link_loss_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_residual_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_available_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_utilized_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unknown_tlvs_unknown_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unknown_tlvs_unknown_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unknown_tlvs_unknown_tlv_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unknown_tlvs_unknown_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_grace_lsa_opaque_grace_period_tlv_grace_period_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_grace_lsa_opaque_restart_reason_tlv_restart_reason_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_grace_lsa_opaque_if_address_tlv_if_address_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_route_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_flags_extended_prefix_flags_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_flags_extended_prefix_flags_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_prefix_sid_flags_bits_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_prefix_sid_flags_bits_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_algorithm_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_sid_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_unknown_tlvs_unknown_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_unknown_tlvs_unknown_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_unknown_tlvs_unknown_tlv_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_unknown_tlvs_unknown_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_prefix_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_af_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_range_size_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_extended_prefix_range_flags_bits_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_extended_prefix_range_flags_bits_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_prefix_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_unknown_tlvs_unknown_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_unknown_tlvs_unknown_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_unknown_tlvs_unknown_tlv_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_unknown_tlvs_unknown_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_link_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_link_data_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_maximum_sid_depth_tlv_msd_type_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_maximum_sid_depth_tlv_msd_type_msd_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_maximum_sid_depth_tlv_msd_type_msd_value_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_adj_sid_flags_bits_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_adj_sid_flags_bits_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_weight_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_sid_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_lan_adj_sid_flags_bits_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_lan_adj_sid_flags_bits_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_weight_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_neighbor_router_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_sid_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_remote_if_address_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_unknown_tlvs_unknown_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_unknown_tlvs_unknown_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_unknown_tlvs_unknown_tlv_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_state_database_as_scope_lsa_type_as_scope_lsas_as_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_unknown_tlvs_unknown_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_create(
	struct nb_cb_create_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_destroy(
	struct nb_cb_destroy_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_get_next(
	struct nb_cb_get_next_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_get_keys(
	struct nb_cb_get_keys_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_lookup_entry(
	struct nb_cb_lookup_entry_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_area_type_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_authentication_create(
	struct nb_cb_create_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_authentication_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_authentication_type_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_summary_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_summary_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_default_cost_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_default_cost_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_nssa_translate_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_nssa_suppress_fa_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_export_list_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_export_list_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_import_list_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_import_list_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_filter_list_in_prefix_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_filter_list_in_prefix_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_filter_list_out_prefix_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_filter_list_out_prefix_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_ranges_range_create(
	struct nb_cb_create_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_ranges_range_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_ranges_range_advertise_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_ranges_range_cost_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_ranges_range_cost_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_ranges_range_substitute_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_ranges_range_substitute_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_shortcut_configuration_modify(
	struct nb_cb_modify_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_threads_stub_router_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_threads_stub_router_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_threads_opaque_lsa_self_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_threads_opaque_lsa_self_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_statistics_spf_runs_count_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_statistics_abr_count_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_statistics_asbr_count_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_statistics_spf_timestamp_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_statistics_active_interfaces_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_statistics_full_nbrs_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_statistics_full_virtual_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_get_next(
	struct nb_cb_get_next_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_get_keys(
	struct nb_cb_get_keys_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_lookup_entry(
	struct nb_cb_lookup_entry_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_lsa_type_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_get_next(
	struct nb_cb_get_next_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_get_keys(
	struct nb_cb_get_keys_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_lookup_entry(
	struct nb_cb_lookup_entry_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_lsa_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_adv_router_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_decode_completed_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_raw_data_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_header_lsa_options_lsa_option_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_header_lsa_options_lsa_option_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_header_lsa_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_header_opaque_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_header_opaque_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_header_age_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_header_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_header_adv_router_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_header_seq_num_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_header_checksum_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_header_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_router_router_bits_rtr_lsa_bits_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_router_router_bits_rtr_lsa_bits_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_router_num_of_links_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_router_links_link_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_router_links_link_link_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_router_links_link_link_data_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_router_links_link_type_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_router_links_link_topologies_topology_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_router_links_link_topologies_topology_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_router_links_link_topologies_topology_metric_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_network_network_mask_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_network_attached_routers_attached_router_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_network_attached_routers_attached_router_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_summary_network_mask_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_summary_topologies_topology_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_summary_topologies_topology_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_summary_topologies_topology_metric_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_external_network_mask_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_external_topologies_topology_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_external_topologies_topology_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_external_topologies_topology_flags_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_external_topologies_topology_metric_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_external_topologies_topology_forwarding_address_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_external_topologies_topology_external_route_tag_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_router_capabilities_tlv_router_informational_capabilities_informational_capabilities_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_router_capabilities_tlv_router_informational_capabilities_informational_capabilities_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_pce_address_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_path_scope_scope_flags_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_path_scope_pref_l_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_path_scope_pref_r_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_path_scope_pref_s_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_path_scope_pref_y_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_domain_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_domain_id_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_neighbors_neighbor_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_neighbors_neighbor_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_neighbors_neighbor_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_capabilities_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_sr_algorithm_tlv_sr_algorithm_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_sr_algorithm_tlv_sr_algorithm_get_next(
	struct nb_cb_get_next_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_sid_range_tlvs_sid_range_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_sid_range_tlvs_sid_range_tlv_range_size_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_sid_range_tlvs_sid_range_tlv_sid_sub_tlv_sid_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_local_block_tlvs_local_block_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_local_block_tlvs_local_block_tlv_range_size_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_local_block_tlvs_local_block_tlv_sid_sub_tlv_sid_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_node_msd_tlvs_node_msd_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_node_msd_tlvs_node_msd_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_node_msd_tlvs_node_msd_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_unknown_tlvs_unknown_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_unknown_tlvs_unknown_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_unknown_tlvs_unknown_tlv_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_ri_opaque_unknown_tlvs_unknown_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_router_address_tlv_router_address_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_link_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_link_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_local_if_ipv4_addrs_local_if_ipv4_addr_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_local_if_ipv4_addrs_local_if_ipv4_addr_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_remote_if_ipv4_addrs_remote_if_ipv4_addr_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_remote_if_ipv4_addrs_remote_if_ipv4_addr_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_te_metric_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_max_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_max_reservable_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unreserved_bandwidths_unreserved_bandwidth_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unreserved_bandwidths_unreserved_bandwidth_priority_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unreserved_bandwidths_unreserved_bandwidth_unreserved_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_admin_group_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_local_and_remote_te_router_id_local_router_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_local_and_remote_te_router_id_remote_router_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_link_local_remote_id_link_local_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_link_local_remote_id_link_remote_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_remote_as_number_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_ipv4_remote_asbr_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_link_delay_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_min_max_unidirectional_link_delay_min_delay_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_min_max_unidirectional_link_delay_max_delay_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_delay_variation_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_link_loss_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_residual_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_available_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_utilized_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unknown_tlvs_unknown_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unknown_tlvs_unknown_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unknown_tlvs_unknown_tlv_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unknown_tlvs_unknown_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_grace_lsa_opaque_grace_period_tlv_grace_period_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_grace_lsa_opaque_restart_reason_tlv_restart_reason_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_grace_lsa_opaque_if_address_tlv_if_address_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_route_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_flags_extended_prefix_flags_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_flags_extended_prefix_flags_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_prefix_sid_flags_bits_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_prefix_sid_flags_bits_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_algorithm_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_sid_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_unknown_tlvs_unknown_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_unknown_tlvs_unknown_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_unknown_tlvs_unknown_tlv_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_unknown_tlvs_unknown_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_prefix_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_af_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_range_size_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_extended_prefix_range_flags_bits_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_extended_prefix_range_flags_bits_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_prefix_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_unknown_tlvs_unknown_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_unknown_tlvs_unknown_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_unknown_tlvs_unknown_tlv_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_unknown_tlvs_unknown_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_link_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_link_data_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_maximum_sid_depth_tlv_msd_type_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_maximum_sid_depth_tlv_msd_type_msd_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_maximum_sid_depth_tlv_msd_type_msd_value_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_adj_sid_flags_bits_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_adj_sid_flags_bits_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_weight_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_sid_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_lan_adj_sid_flags_bits_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_lan_adj_sid_flags_bits_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_weight_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_neighbor_router_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_sid_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_remote_if_address_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_unknown_tlvs_unknown_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_unknown_tlvs_unknown_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_unknown_tlvs_unknown_tlv_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_state_database_area_scope_lsa_type_area_scope_lsas_area_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_unknown_tlvs_unknown_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_create(
	struct nb_cb_create_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_destroy(
	struct nb_cb_destroy_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_get_next(
	struct nb_cb_get_next_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_get_keys(
	struct nb_cb_get_keys_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_lookup_entry(
	struct nb_cb_lookup_entry_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_dead_interval_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_hello_interval_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_retransmit_interval_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_transmit_delay_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_authentication_type_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_authentication_simple_key_modify(
	struct nb_cb_modify_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_authentication_simple_key_destroy(
	struct nb_cb_destroy_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_authentication_mds_keys_mds_key_create(
	struct nb_cb_create_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_authentication_mds_keys_mds_key_destroy(
	struct nb_cb_destroy_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_state_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_hello_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_wait_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_dr_router_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_dr_ip_addr_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_bdr_router_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_bdr_ip_addr_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_network_lsa_seqno_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_multicast_groups_ospf_all_routers_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_multicast_groups_ospf_designated_routers_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_threads_ls_ack_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_threads_ls_ack_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_threads_ls_ack_direct_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_threads_ls_upd_event_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_threads_opaque_lsa_self_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_threads_opaque_lsa_self_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_statistics_if_event_count_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_statistics_hello_in_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_statistics_hello_out_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_statistics_db_desc_in_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_statistics_db_desc_out_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_statistics_ls_req_in_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_statistics_ls_req_out_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_statistics_ls_upd_in_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_statistics_ls_upd_out_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_statistics_ls_ack_in_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_statistics_ls_ack_out_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_statistics_discarded_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_statistics_nbrs_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_statistics_full_nbrs_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_get_next(
	struct nb_cb_get_next_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_get_keys(
	struct nb_cb_get_keys_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_lookup_entry(
	struct nb_cb_lookup_entry_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_neighbor_router_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_address_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_dr_router_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_dr_ip_addr_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_bdr_router_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_bdr_ip_addr_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_state_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_dead_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_statistics_nbr_retrans_qlen_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_statistics_nbr_request_qlen_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_statistics_nbr_summary_len_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_statistics_nbr_uptime_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_statistics_nbr_downtime_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_statistics_nsm_state_changes_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_statistics_nsm_last_progressive_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_statistics_nsm_last_regressive_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_threads_db_desc_retransmission_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_threads_db_desc_retransmission_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_threads_ls_request_retransmission_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_threads_ls_request_retransmission_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_threads_ls_update_retransmission_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_threads_ls_update_retransmission_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_threads_hello_reply_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_threads_hello_reply_timer_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_graceful_restart_helper_grace_period_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_graceful_restart_helper_restart_reason_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_graceful_restart_helper_helper_status_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_graceful_restart_helper_helper_exit_reason_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_neighbors_neighbor_graceful_restart_helper_helper_rejected_reason_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_get_next(
	struct nb_cb_get_next_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_get_keys(
	struct nb_cb_get_keys_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_lookup_entry(
	struct nb_cb_lookup_entry_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_lsa_type_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_get_next(
	struct nb_cb_get_next_args *args);
int routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_get_keys(
	struct nb_cb_get_keys_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_lookup_entry(
	struct nb_cb_lookup_entry_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_lsa_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_adv_router_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_decode_completed_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_raw_data_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_header_lsa_options_lsa_option_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_header_lsa_options_lsa_option_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_header_lsa_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_header_opaque_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_header_opaque_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_header_age_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_header_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_header_adv_router_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_header_seq_num_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_header_checksum_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_header_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_router_router_bits_rtr_lsa_bits_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_router_router_bits_rtr_lsa_bits_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_router_num_of_links_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_router_links_link_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_router_links_link_link_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_router_links_link_link_data_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_router_links_link_type_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_router_links_link_topologies_topology_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_router_links_link_topologies_topology_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_router_links_link_topologies_topology_metric_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_network_network_mask_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_network_attached_routers_attached_router_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_network_attached_routers_attached_router_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_summary_network_mask_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_summary_topologies_topology_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_summary_topologies_topology_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_summary_topologies_topology_metric_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_external_network_mask_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_external_topologies_topology_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_external_topologies_topology_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_external_topologies_topology_flags_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_external_topologies_topology_metric_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_external_topologies_topology_forwarding_address_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_external_topologies_topology_external_route_tag_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_router_capabilities_tlv_router_informational_capabilities_informational_capabilities_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_router_capabilities_tlv_router_informational_capabilities_informational_capabilities_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_pce_address_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_path_scope_scope_flags_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_path_scope_pref_l_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_path_scope_pref_r_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_path_scope_pref_s_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_path_scope_pref_y_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_domain_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_domain_id_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_neighbors_neighbor_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_neighbors_neighbor_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_neighbors_neighbor_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_pced_tlv_capabilities_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_sr_algorithm_tlv_sr_algorithm_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_sr_algorithm_tlv_sr_algorithm_get_next(
	struct nb_cb_get_next_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_sid_range_tlvs_sid_range_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_sid_range_tlvs_sid_range_tlv_range_size_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_sid_range_tlvs_sid_range_tlv_sid_sub_tlv_sid_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_local_block_tlvs_local_block_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_local_block_tlvs_local_block_tlv_range_size_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_local_block_tlvs_local_block_tlv_sid_sub_tlv_sid_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_node_msd_tlvs_node_msd_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_node_msd_tlvs_node_msd_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_node_msd_tlvs_node_msd_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_unknown_tlvs_unknown_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_unknown_tlvs_unknown_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_unknown_tlvs_unknown_tlv_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_ri_opaque_unknown_tlvs_unknown_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_router_address_tlv_router_address_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_link_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_link_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_local_if_ipv4_addrs_local_if_ipv4_addr_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_local_if_ipv4_addrs_local_if_ipv4_addr_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_remote_if_ipv4_addrs_remote_if_ipv4_addr_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_remote_if_ipv4_addrs_remote_if_ipv4_addr_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_te_metric_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_max_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_max_reservable_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unreserved_bandwidths_unreserved_bandwidth_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unreserved_bandwidths_unreserved_bandwidth_priority_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unreserved_bandwidths_unreserved_bandwidth_unreserved_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_admin_group_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_local_and_remote_te_router_id_local_router_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_local_and_remote_te_router_id_remote_router_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_link_local_remote_id_link_local_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_link_local_remote_id_link_remote_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_remote_as_number_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_ipv4_remote_asbr_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_link_delay_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_min_max_unidirectional_link_delay_min_delay_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_min_max_unidirectional_link_delay_max_delay_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_delay_variation_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_link_loss_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_residual_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_available_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unidirectional_utilized_bandwidth_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unknown_tlvs_unknown_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unknown_tlvs_unknown_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unknown_tlvs_unknown_tlv_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_te_opaque_link_tlv_unknown_tlvs_unknown_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_grace_lsa_opaque_grace_period_tlv_grace_period_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_grace_lsa_opaque_restart_reason_tlv_restart_reason_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_grace_lsa_opaque_if_address_tlv_if_address_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_route_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_flags_extended_prefix_flags_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_flags_extended_prefix_flags_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_prefix_sid_flags_bits_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_prefix_sid_flags_bits_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_algorithm_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_prefix_sid_sub_tlvs_prefix_sid_sub_tlv_sid_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_unknown_tlvs_unknown_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_unknown_tlvs_unknown_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_unknown_tlvs_unknown_tlv_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_tlv_unknown_tlvs_unknown_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_prefix_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_af_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_range_size_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_extended_prefix_range_flags_bits_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_extended_prefix_range_flags_bits_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_prefix_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_unknown_tlvs_unknown_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_unknown_tlvs_unknown_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_unknown_tlvs_unknown_tlv_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_prefix_opaque_extended_prefix_range_tlvs_extended_prefix_range_tlv_unknown_tlvs_unknown_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_link_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_link_data_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_maximum_sid_depth_tlv_msd_type_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_maximum_sid_depth_tlv_msd_type_msd_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_maximum_sid_depth_tlv_msd_type_msd_value_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_adj_sid_flags_bits_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_adj_sid_flags_bits_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_weight_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_adj_sid_sub_tlvs_adj_sid_sub_tlv_sid_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_lan_adj_sid_flags_bits_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_lan_adj_sid_flags_bits_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_mt_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_weight_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_neighbor_router_id_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_lan_adj_sid_sub_tlvs_lan_adj_sid_sub_tlv_sid_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_remote_if_address_get_elem(
	struct nb_cb_get_elem_args *args);
const void *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_unknown_tlvs_unknown_tlv_get_next(
	struct nb_cb_get_next_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_unknown_tlvs_unknown_tlv_type_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_unknown_tlvs_unknown_tlv_length_get_elem(
	struct nb_cb_get_elem_args *args);
struct yang_data *
routing_control_plane_protocols_control_plane_protocol_ospf_areas_area_virtual_links_virtual_link_state_database_link_scope_lsa_type_link_scope_lsas_link_scope_lsa_ospfv2_body_opaque_extended_link_opaque_extended_link_tlv_unknown_tlvs_unknown_tlv_value_get_elem(
	struct nb_cb_get_elem_args *args);
int clear_ospf_interface_rpc(struct nb_cb_rpc_args *args);
int clear_ospf_neighbor_rpc(struct nb_cb_rpc_args *args);
int clear_ospf_process_rpc(struct nb_cb_rpc_args *args);

#endif /* _FRR_OSPF_NB_H_ */
